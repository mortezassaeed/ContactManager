{"version":3,"sources":["component/Header.js","context.js","component/Content.js","component/Contents.js","HtmlGenerator/InputFormGroup.js","layout/NewPerson.js","pages/About.js","layout/Notfoud.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","abbas","className","style","color","to","defaultProps","Context","React","createContext","reducer","state","action","type","person","filter","item","id","payload","Provider","dispatch","setState","axios","get","res","this","data","value","children","Component","Consumer","Content","showContantInfo","clickArrowDown","e","deleteItem","delete","then","name","username","email","onClick","float","bind","Contents","deletIetemHandeler","m","map","key","InputFormGroup","label","onChange","error","htmlFor","classname","NewPerson","errors","onSubmit","a","preventDefault","post","history","push","target","About","Notfoud","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f3eb9a67.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { DiffieHellman } from \"crypto\";\nimport { Link } from \"react-router-dom\";\n\nfunction Header(props) {\n  const { branding, abbas } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a className=\"navbar-brand\" style={{ color: \"white\" }}>\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fa fa-home\"></i> Home\n              </Link>\n            </li>\n\n            <li className=\"nav-item\">\n              <Link to=\"/add\" className=\"nav-link\">\n                <i className=\"fa fa-plus \"></i> Add\n              </Link>\n            </li>\n\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fa fa-question\"></i> About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nHeader.defaultProps = {\n  branding: \"default brand\"\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string\n};\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_PERSON\":\n      return {\n        ...state,\n        person: state.person.filter(item => item.id !== action.payload)\n      };\n    case \"CREATE_PERSON\":\n      return {\n        ...state,\n        person: [action.payload, ...state.person]\n      };\n      break;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    person: [],\n    dispatch: action => {\n      this.setState(state => reducer(state, action));\n    }\n  };\n\n  async componentDidMount() {\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n    // .then(res => this.setState({ person: res.data }));\n    this.setState({ person: res.data });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Content.css\";\nimport { Consumer } from \"../context\";\nimport axios from \"axios\";\n\nclass Content extends Component {\n  state = {\n    showContantInfo: false\n  };\n  static propTypes = {\n    person: PropTypes.object.isRequired\n  };\n\n  clickArrowDown = e => {\n    this.setState({ showContantInfo: !this.state.showContantInfo });\n  };\n\n  deleteItem = (id, dispatch) => {\n    axios\n      .delete(`https://jsonplaceholder.typicode.com/users/${id}`)\n      .then(res => dispatch({ type: \"DELETE_PERSON\", payload: id }));\n  };\n\n  render() {\n    const { id, name, username, email } = this.props.person;\n    const { showContantInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body md-3\">\n              <h1>\n                {name}{\" \"}\n                <i className=\"fa fa-sort-down\" onClick={this.clickArrowDown} />\n                <i\n                  style={{ float: \"right\" }}\n                  className=\"fa fa-amazon\"\n                  onClick={this.deleteItem.bind(this, id, dispatch)}\n                />\n              </h1>\n\n              {showContantInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">id : {id}</li>\n                  <li className=\"list-group-item\">User Name : {username}</li>\n                  <li className=\"list-group-item\">Email : {email} </li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n\n    // return (\n    //   <div className=\"card card-body md-3\">\n    //     <h1>\n    //       {name} <i className=\"fa fa-sort-down\" onClick={this.clickArrowDown} />\n    //       <i\n    //         style={{ float: \"right\" }}\n    //         className=\"fa fa-amazon\"\n    //         onClick={this.props.deleteItem}\n    //       />\n    //     </h1>\n\n    //     {showContantInfo ? (\n    //       <ul className=\"list-group\">\n    //         <li className=\"list-group-item\">Last Name : {lastName}</li>\n    //         <li className=\"list-group-item\">Age : {age} </li>\n    //       </ul>\n    //     ) : null}\n    //   </div>\n    // );\n  }\n}\n\n// Content.defualtType = {\n//     name: PropTypes.string.isRequired,\n//     lastName: PropTypes.string,\n//     age: PropTypes.number\n// }\n\nexport default Content;\n","import React, { Component } from \"react\";\nimport Content from \"./Content\";\nimport { Consumer } from \"../context\";\n\nexport default class Contents extends Component {\n  // state = {\n  //   person: []\n  // };\n\n  constructor() {\n    super();\n  }\n\n  deletIetemHandeler = id => {\n    this.setState({ person: this.state.person.filter(m => m.id !== id) });\n  };\n\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { person } = value;\n          return (\n            <div>\n              {person.map(item => (\n                <Content\n                  key={item.id}\n                  person={item}\n                  deleteItem={this.deletIetemHandeler.bind(this, item.id)}\n                />\n              ))}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n\n    // return (\n    //   <Cunsumer>\n    //     {value => {\n    //       const { person } = value;\n    //       <div>\n    //         {person.map(item => (\n    //           <Content\n    //             key={item.id}\n    //             person={item}\n    //             deleteItem={this.deletIetemHandeler.bind(this, item.id)}\n    //           />\n    //         ))}\n    //       </div>;\n    //     }}\n    //   </Cunsumer>\n    // );\n\n    // const { person } = this.state;\n    // return (\n    //   <div>\n\n    //     {person.map(item => (\n    //       <Content\n    //         key={item.id}\n    //         person={item}\n    //         deleteItem={this.deletIetemHandeler.bind(this, item.id)}\n    //       />\n    //     ))}\n    //   </div>\n    // );\n  }\n}\n","import React from \"react\";\nimport classname from \"classnames\";\n\nconst InputFormGroup = ({ label, type, name, onChange, value, error }) => {\n  return (\n    <div className=\"from-group\">\n      <label htmlFor=\"name\">{label}</label>\n\n      <input\n        type={type}\n        className={classname(\"form-control form-control-lg \", {\n          \"is-invalid\": error\n        })}\n        value={value}\n        name={name}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">Worng !!! {error}</div>}\n    </div>\n  );\n};\n\nexport default InputFormGroup;\n","import React, { Component } from \"react\";\nimport uuid from \"uuid\";\nimport { Consumer } from \"../context\";\nimport InputFormGroup from \"../HtmlGenerator/InputFormGroup\";\nimport axios from \"axios\";\n\nexport default class NewPerson extends Component {\n  state = {\n    id: 0,\n    name: \"\",\n    email: \"\",\n    errors: { name: \"\", email: \"\" }\n  };\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email } = this.state;\n\n    if (!name) {\n      this.setState({ errors: { name: \"Name Is Requierd\" } });\n      return;\n    }\n    if (!email) {\n      this.setState({ errors: { email: \"Email Is Requierd\" } });\n      return;\n    }\n\n    const res = await axios.post(\"https://jsonplaceholder.typicode.com/users\", {\n      name,\n      email\n    });\n    dispatch({\n      type: \"CREATE_PERSON\",\n      payload: res.data\n    });\n\n    // if (age <= 0) {\n    //   this.setState({ errors: { age: \"Last name Is Requierd\" } });\n    //   return;\n    // }\n\n    this.setState({\n      id: \"\",\n      name: \"\",\n      email: \"\"\n    });\n\n    this.props.history.push(\"/\");\n  };\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  render() {\n    const { name, email, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">new person</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <InputFormGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <InputFormGroup\n                    label=\"Email\"\n                    type=\"email\"\n                    name=\"email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n\n                  <input\n                    type=\"submit\"\n                    value=\"Add New Person\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n\n    // return (\n    //   <div className=\"card mb-3\">\n    //     <div className=\"card-header\">new person</div>\n    //     <div className=\"card-body\">\n    //       <form onSubmit={this.onSubmit}>\n    //         <div className=\"from-group\">\n    //           <label htmlFor=\"name\">name</label>\n    //           <input\n    //             type=\"text\"\n    //             className=\"form-control form-control-lg\"\n    //             value={name}\n    //             name=\"name\"\n    //             onChange={this.onChange}\n    //           />\n    //         </div>\n    //         <div className=\"from-group\">\n    //           <label htmlFor=\"lastName\">lastName</label>\n    //           <input\n    //             type=\"text\"\n    //             className=\"form-control form-control-lg\"\n    //             value={lastName}\n    //             name=\"lastName\"\n    //             onChange={this.onChange}\n    //           />\n    //         </div>\n    //         <div className=\"from-group\">\n    //           <label htmlFor=\"age\">age</label>\n    //           <input\n    //             type=\"text\"\n    //             className=\"form-control form-control-lg\"\n    //             value={age}\n    //             name=\"age\"\n    //             onChange={this.onChange}\n    //           />\n    //         </div>\n    //         <input\n    //           type=\"submit\"\n    //           value=\"Add New Person\"\n    //           className=\"btn btn-light btn-block\"\n    //         />\n    //       </form>\n    //     </div>\n    //   </div>\n    //);\n  }\n}\n","import React from \"react\";\n\nexport default function About() {\n  return <div>About us</div>;\n}\n","import React from \"react\";\n\nexport default function Notfoud() {\n  return <div>404</div>;\n}\n","import React from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Header from \"./component/Header\";\nimport Contact from \"./component/Content\";\nimport moduleName from \"bootstrap/dist/css/bootstrap.min.css\";\nimport Content from \"./component/Content\";\nimport Contents from \"./component/Contents\";\nimport { Provider } from \"./context\";\nimport NewPerson from \"./layout/NewPerson\";\nimport About from \"./pages/About\";\nimport Notfoud from \"./layout/Notfoud\";\n\nfunction App() {\n  // const statt = [{\n  //   name: 'Ali',\n  //   lastName: 'Vahidi',\n  //   age: 22\n  // },\n  // {\n  //   name: 'Abbas',\n  //   lastName: 'Akbari',\n  //   age: 20\n  // }]\n\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header branding=\"contacrt manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contents} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/add\" component={NewPerson} />\n              <Route component={Notfoud} />\n            </Switch>\n            {/* <NewPerson /> */}\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}